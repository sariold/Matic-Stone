html {
  font-size: 14px;
  @media only screen and (min-width: 1500px) {
    font-size: 18px;
  }
  -webkit-touch-callout: none; /* iOS Safari */
  -webkit-user-select: none; /* Safari */
  -khtml-user-select: none; /* Konqueror HTML */
  -moz-user-select: none; /* Old versions of Firefox */
  -ms-user-select: none; /* Internet Explorer/Edge */
  user-select: none; /* Non-prefixed version, currently
                                supported by Chrome, Edge, Opera and Firefox */
  overflow-x: hidden;
  overflow-y: hidden;
}

.home a:hover {
  color: white;
}

.navbar-brand {
  font-size: 2rem;
}

.homepage button {
  font-size: 2rem;
}

.background {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-repeat: no-repeat;
  background-size: cover;
  height: 100vh;
  background-color: #f3f3f5;
  margin-top: -2rem;
}

.game p {
  font-size: 1.5rem;
}

.backdrop {
  background-color: #f3f3f5;
  justify-content: center;
  align-items: center;
  text-align: center;
  height: 100vh;
}

.backdrop img {
  height: 80%;
  width: 80%;
  justify-content: center;
}

.carousel .slide img {
  // height: 50%;
  // width: 280px;
  width: 20rem;
  padding-top: 1.5rem;
}

.carousel-badge {
  color: red;
  font-size: 2rem;
  padding-top: 1rem;
}

.turnInfo,
.time {
  font-size: 1rem;
}

// .health {
// color: red;
// font-size: 1rem;
// }

.front,
.back,
.backStack {
  width: 5rem;
}

.backStack {
  display: flex;
  position: absolute;
}

.affordableCard::before {
  content: "";
  width: 100%;
  height: 7rem;
  position: absolute;
  background-color: greenyellow;
  opacity: 25%;
}

.tapped {
  transform: rotate(90deg);
  margin-left: 1.5rem;
  margin-right: 1.5rem;
}

.tapped:active {
  cursor: pointer;
  z-index: 9999;
  transform: scale(4);
}

.cpuField .card:active {
  cursor: pointer;
  z-index: 9999;
  transform: scale(4);
}

.playerField .card:active {
  cursor: pointer;
  z-index: 9999;
  transform: scale(4);
}

.badge {
  text-align: center;
  position: absolute;
  bottom: 0rem;
  right: 1rem;
  width: 3rem;
  // height: 3.5rem;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
  background-color: red;
  color: white;
  font-size: 0.5rem;
}

.playerDeck {
  border-style: solid;
  border-color: blue;
  height: 7.3rem;
  width: 5.3rem;
}

.cpuField,
.playerField {
  justify-content: center;
  text-align: center;
  display: flex;
  height: 7rem;
  /* max-width: 50rem; */
  border-style: solid;
  border-color: black;
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.cpuField > div {
  animation: slam 2s;
}

.cpuHand,
.playerHand {
  display: flex;
  justify-content: center;
  width: 40rem;
}

.cpuDeck {
  border-style: solid;
  border-color: black;
  position: relative;
  height: 7rem;
  width: 5rem;
}

.cpuDiscard,
.playerDiscard {
  background-image: url("https://sariold.github.io/Matic-Stone/assets/trash.png");
  background-size: 5rem;
  background-position: center;
  height: 7rem;
  width: 5rem;
}

@keyframes slam {
  0% {
    transform: scale(10, 10);
    opacity: 0;
  }

  40% {
    opacity: 0;
  }

  100% {
    transform: scale(1, 1);
    opacity: 1;
  }
}

.playerCard {
  height: 7rem;
  // padding: 1rem;
  margin: 0 -0.5rem;
  position: relative;
  width: 5rem;
  &:after {
    // uncomment background below to see hit areas
    // background: rgba(255, 0, 0, 0.45);
    // width: 10rem;
    bottom: 0;
    content: "";
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    z-index: 10;
  }
}

.handCard,
.affordableCard {
  bottom: 0;
  content: "";
  left: 0;
  pointer-events: none;
  position: absolute;
  right: 0;
  top: 0;
  transition: 800ms cubic-bezier(0.19, 1, 0.22, 1) transform;
  &:after {
    animation: none;
    // background: red;
    bottom: 0;
    content: "";
    left: 0;
    opacity: 0;
    position: absolute;
    right: 0;
    top: 0;
  }
}

$total: 7;
@for $i from 0 through ($total - 1) {
  $rotationRange: 20;
  $rotation: ($i - ($total - 1) / 2) / ($total - 2) * $rotationRange;
  $offsetRange: 10;
  $offset: abs(($i - ($total - 1) / 2) / ($total - 2) * $offsetRange);
  .playerCard:nth-child(#{$i + 1}) {
    .handCard,
    .affordableCard {
      transform: translateY($offset * 1px) rotate($rotation * 1deg);
    }
    &:hover {
      .viewable {
        pointer-events: none;
        transform: translateY(-100px) rotate(0deg) scale(3);
        transition-duration: 0ms;
        z-index: 5;
      }
    }
  }
}

@keyframes fade {
  0% {
    opacity: 0.9;
    transform: scale(1);
  }
  100% {
    opacity: 0;
    transform: scale(1.15);
  }
}

.playerField .attackPlayer {
  animation: lungeForward 1s ease-out forwards;
}

.cpuField .attackCPU {
  animation: lungeBackward 1s ease-in backwards;
}

@keyframes lungeForward {
  50% {
    transform: translateY(-15rem);
  }
}

@keyframes lungeBackward {
  50% {
    transform: translateY(15rem);
  }
}
